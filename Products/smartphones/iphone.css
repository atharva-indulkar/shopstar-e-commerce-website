@import url("https://fonts.googleapis.com/css2?family=Work+Sans:wght@100;200;300;400;500;600;700;800;900&display=swap");

/* Common Styles */
* {/*  *: This is the universal selector in CSS. It selects all elements on the webpage.*/
  margin: 0; /* Sets the margin of all elements to zero. Margins are the space around elements.*/
  padding: 0; /* Sets the padding of all elements to zero. Padding is the space inside an element, between the content and the border.*/
  box-sizing: border-box; /* This changes the box model used by elements. With box-sizing: border-box;, the width and height of an element includes padding and border, but not the margin.*/
  list-style-type: none; /* Removes the default bullet points or numbering from lists (such as <ul> and <ol> elements). This property removes the list-style (usually bullets or numbers) from these elements.*/
  outline: none; /*  Removes the outline that appears around elements when they are clicked. This is commonly used to remove the default focus outline for accessibility purposes, but it's crucial to ensure there's an alternative visual indicator for keyboard users.*/

  text-decoration: none; /*Removes the default text underlines. This property is often used to remove underlines from links (<a> elements).*/ 
  font-family: "Work Sans", sans-serif; /* Sets the default font family for the entire document. In this case, it's setting the primary font to "Work Sans" and providing an alternative option of a generic sans-serif font in case "Work Sans" is not available.*/
}

html {/* This CSS rule targets the <html> element in an HTML document. The <html> element is the root element of the document, containing the entire web page.*/
  font-size: 62.5%; /* This line sets the base font size for the entire document. In this case, it's set to 62.5%.*/
  scroll-behavior: smooth; /*  This property is used to specify the scrolling behavior for the document. When scroll-behavior is set to smooth, it enables a smooth transition when scrolling on the page. Rather than an abrupt jump from one part of the page to another, the browser will animate the scrolling, making it appear smoother and more visually appealing.*/
}

/* :root {
  --primary-color: #6edae6;
  --white-color: #fff;
  --black-color: #000;
} */

.center { /* contains properties for aligning and centering elements within a container. Let's break down each property:*/
  display: flex;  /* This property with a value of flex sets the display type of the element to a flex container. By using Flexbox, you can easily control the layout and alignment of child elements within this container.*/
  justify-content: center; /* For a flex container, this property aligns the flex items along the main axis (in this case, the HORIZONTAL axis) and centers them horizontally within the container.*/ 
  align-items: center; /* Aligns the flex items along the cross-axis (in this case, the vertical axis) and centers them vertically within the container.*/
}
/* End of Common Styles */

/* Section 1 */
.section-1 {
  width: 100%;  /* To take the entire width*/
  height: 150vh; /* Make the element cover 1.5 times the height of the viewport.*/
  /* background-color: var(--primary-color); */
  display: flex; /*Aligns the flex items along the main axis (horizontally) and applies space between the items evenly within the container*/
  align-items: center;
  justify-content: space-evenly;
  position: relative; /* allows the use of absolute positioning for its child elements, specifying their position based on this .section-1 element.*/
  clip-path: polygon(100% 0, 100% 95%, 38% 100%, 0 100%, 0 0); /*Defines a clipping path for the element's shape. This creates a non-rectangular shape for the element using a polygon.*/
  /*(100% 0): Represents the top-right corner. It's at 100% of the element's width (far right) and 0% of the element's height (top).
(100% 95%): Represents the bottom-right corner. It's at 100% of the width (far right) and 95% of the height (near the bottom).
(38% 100%): Represents the bottom part of the shape. It's at 38% of the width and 100% of the height (bottom).
(0 100%): Represents the bottom-left corner. It's at 0% of the width (far left) and 100% of the height (bottom).
(0 0): Represents the top-left corner. It's at 0% of the width (far left) and 0% of the height (top).
Together, these coordinates create a shape that might resemble a slanted or irregular polygon, defining a region within the element where content will be visible. Content outside this defined shape will be hidden or clipped.

This technique is often used for creating non-rectangular shapes, custom borders, or specific visual effects on elements by showing content within a defined boundary while concealing content outside of it.*/
}
/* Cube */
.cube-wrapper {
  perspective: 100rem;    /* to give a 3D-positioned element some perspective*/
                            /*Setting a perspective value influences how 3D transformed elements are viewed in relation to the viewer's position, affecting the perception of depth when using 3D transforms like rotations or translations.*/
}

.cube {
  width: 30rem;
  height: 55rem;
  transform-style: preserve-3d;      /*Indicates that the children of the element should be positioned in the 3D-space*/
  /*transform-style: This property specifies how nested elements are rendered in a 3D transformed space. The value preserve-3d indicates that the child elements maintain their 3D position and orientation in relation to the 3D space established by their parent.*/
  transform: rotateX(0) rotateY(20deg) rotateZ(0);
  /*No rotation around the X-axis (rotateX(0)).
A 20-degree clockwise rotation around the Y-axis (rotateY(20deg)).
No rotation around the Z-axis (rotateZ(0)).*/
  position: relative;
  top: -2rem;
  transition: transform 0.5s;
}

.front-side,
.back-side {
  width: 100%;
  height: 100%;
  background-color: rgb(245, 219, 219);
  position: absolute;
  transform-style: preserve-3d;
  box-shadow: inset 0.1rem 0.1rem 0.1rem #160707, inset -0.1rem -0.1rem 0.1rem #130606; 
  /*Inset shadows are drawn inside the box's border and they appear above the background but below the content*/
}

.front-side {
  padding: 2.5rem;
  transform: translateZ(5rem);   /*Repositions an element along the z-axis in 3D space*/
}

.front-side::before,
.front-side::after {
  content: "";
  width: 100%;
  height: 10rem;
  background-color: rgb(245, 219, 219);
  position: absolute;
  box-shadow: inset 0.1rem 0.1rem 0.1rem #160707, inset -0.1rem -0.1rem 0.1rem #130606;
}

.front-side::before {
  top: 0;
  left: 0;
  transform: rotateX(-90deg);
  transform-origin: top;
}

.front-side::after {
  bottom: 0;
  left: 0;
  transform: rotateX(90deg);
  transform-origin: bottom;
}

.front-side img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.back-side {
  /* padding: 2.5rem; */
  transform: translateZ(-5rem);
}

.back-side::before,
.back-side::after {
  content: "Iphone";
  width: 10rem;
  height: 100%;
  background-color: rgb(245, 219, 219);
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  font-weight: 300;
  color: #040404;
  box-shadow: inset 0.1rem 0.1rem 0.1rem #160707, inset -0.1rem -0.1rem 0.1rem #130606;
}

.back-side::before {
  top: 0;
  left: 0;
  transform: rotateY(-90deg);
  transform-origin: left;
}

.back-side::after {
  top: 0;
  right: 0;
  transform: rotateY(90deg);
  transform-origin: right;
}

.back-side img {
  font-size: 12rem;
  /* color: var(--primary-color); */
  text-shadow: 0.1rem 0.1rem 0.2rem #aaa, -0.1rem -0.1rem 0.2rem #aaa;
  transform: rotateY(180deg);
}
.back-side i {
    font-size: 12rem;
    /* color: var(--primary-color); */
    text-shadow: 0.1rem 0.1rem 0.2rem #aaa, -0.1rem -0.1rem 0.2rem #aaa;
    transform: rotateY(180deg);
}

.controls {
  position: absolute;
  bottom: -15rem;
  left: 50%;
  transform: translateX(-50%);
  width: 10rem;
  height: 10rem;
  background-color: rgba(0, 0, 0, 0.9);
  border-radius: 50%;
  border: 1rem solid rgba(0, 0, 0, 0.8);
}

.controls a {
  position: absolute;
}

.controls a:nth-child(1) {
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

.controls a:nth-child(2) {
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}

.controls a:nth-child(3) {
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

.controls a:nth-child(4) {
  top: 50%;
  right: 0;
  transform: translateY(-50%);
}

.controls a:nth-child(5) {
  top: 10%;
  right: 10%;
  transform: rotate(45deg);
}

.controls a:nth-child(6) {
  bottom: 10%;
  left: 10%;
  transform: rotate(45deg);
}

.controls i {
  font-size: 1.5rem;
  /* color: var(--primary-color); */
  opacity: 0.5;
  transition: opacity 0.5s;
}

.controls a:hover i {
  opacity: 1;
}
.back{
  margin-top: .5rem;
  margin-left: .5rem;
  cursor: pointer;
  font-size: large;
}